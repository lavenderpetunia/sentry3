{"ast":null,"code":"var _jsxFileName = \"/Users/yuvalnachon/Downloads/sentry/exercise3/sentry3/src/App.js\";\nimport * as Sentry from \"@sentry/browser\";\nimport { Integrations as TracingIntegrations } from \"@sentry/tracing\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSentry.init({\n  dsn: \"https://d60f38c2b0f149b7b60bdad6b7a998f4@o911779.ingest.sentry.io/5855066\",\n  // This enables automatic instrumentation (highly recommended), but is not\n  // necessary for purely manual usage\n  integrations: [new TracingIntegrations.BrowserTracing()],\n  // To set a uniform sample rate\n  tracesSampleRate: 1 // Alternatively, to control sampling dynamically\n  //tracesSampler: samplingContext => { ... }\n\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Yuval's 3rd assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: {\n          throwError\n        },\n        children: \"Throw Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n;\n\nfunction throwError() {\n  throw Error(\"Test Sentry Error Monitoring for React\");\n}\n\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yuvalnachon/Downloads/sentry/exercise3/sentry3/src/App.js"],"names":["Sentry","Integrations","TracingIntegrations","init","dsn","integrations","BrowserTracing","tracesSampleRate","App","throwError","Error"],"mappings":";AAAA,OAAO,KAAKA,MAAZ,MAAwB,iBAAxB;AACA,SAASC,YAAY,IAAIC,mBAAzB,QAAoD,iBAApD;AACA,OAAO,WAAP;;AAEAF,MAAM,CAACG,IAAP,CAAY;AACVC,EAAAA,GAAG,EAAE,2EADK;AAGV;AACA;AACAC,EAAAA,YAAY,EAAE,CAAC,IAAIH,mBAAmB,CAACI,cAAxB,EAAD,CALJ;AAOV;AACAC,EAAAA,gBAAgB,EAAE,CARR,CAUV;AACA;;AAXU,CAAZ;;AAcA,SAASC,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE;AAACC,UAAAA;AAAD,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQD,G;AASR;;AAED,SAASC,UAAT,GAAsB;AACpB,QAAMC,KAAK,CAAC,wCAAD,CAAX;AACD;;AAAA;AAED,eAAeF,GAAf","sourcesContent":["import * as Sentry from \"@sentry/browser\";\nimport { Integrations as TracingIntegrations } from \"@sentry/tracing\";\nimport './App.css';\n\nSentry.init({\n  dsn: \"https://d60f38c2b0f149b7b60bdad6b7a998f4@o911779.ingest.sentry.io/5855066\",\n\n  // This enables automatic instrumentation (highly recommended), but is not\n  // necessary for purely manual usage\n  integrations: [new TracingIntegrations.BrowserTracing()],\n\n  // To set a uniform sample rate\n  tracesSampleRate: 1\n\n  // Alternatively, to control sampling dynamically\n  //tracesSampler: samplingContext => { ... }\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h3>Yuval's 3rd assignment</h3>\n        <button onClick={{throwError}}>Throw Error</button>\n      </header>\n    </div>\n  );\n};\n\nfunction throwError() {\n  throw Error(\"Test Sentry Error Monitoring for React\");\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}